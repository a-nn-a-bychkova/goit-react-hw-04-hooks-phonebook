{"version":3,"sources":["components/styles/Input.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","props","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","console","log","reset","onSubmit","preventDefault","className","s","Form","Label","type","onChange","Input","ContactList","contacts","onDeleteContact","List","map","id","Item","Text","onClick","Filter","App","initialContacts","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","some","alert","newContact","shortid","generate","length","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb13e5e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Input_Form__2J2Eg\",\"Label\":\"Input_Label__3bFJD\",\"Input\":\"Input_Input__23g4D\"};","import React, { useState, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../styles/Input.module.css';\n\nfunction ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    console.log(name, value);\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    } else if (e.currentTarget.name === 'number') {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.Form}>\n      <label className={s.Label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          className={s.Input}\n        />\n      </label>\n      <label className={s.Label}>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.Input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.List}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.Item}>\n        <p className={s.Text}>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            onDeleteContact(id);\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../styles/Input.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.Label}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} className={s.Input} />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect, Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport initialContacts from '../initialContacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    console.log('component useEffect');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(contacts => [...parsedContacts]);\n    }\n  }, []);\n  useEffect(() => {\n    console.log('обновились контакты');\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const isNameInContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isNameInContact) {\n      alert(`${name} is already in contact`);\n    } else if (name !== '' || number !== '') {\n      const newContact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n      setContacts(contacts => [newContact, ...contacts]);\n    }\n  };\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n  const visibleContacts = getVisibleContacts();\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? (\n        <Filter value={filter} onChange={changeFilter} />\n      ) : (\n        <p>Your phonebook is empty</p>\n      )}\n\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__3GxQE\",\"Item\":\"ContactList_Item__3F3Sa\",\"Text\":\"ContactList_Text__21apv\"};"],"sourceRoot":""}